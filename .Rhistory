#getwd()
rm(list=ls())
#use setwd() to direct the workspace to where the data is.
#setwd("C:/Users/Fangyu/Google Drive/3_UCL MRes Medical Device/M0_Individual Project/A008 Experiments/C004_LabViewPicoScope/x64/Fangyu Code/B002_BuiltInFrequencyDetection/Data")
##########################################
############### Call Function ############
##########################################
source("R_lib/TimeSampleInOut.R")
source("R_lib/calSAR.R")
source("R_lib/multiHeatingCurve.R")
#######Unused Functions##############
#source("R_lib/PeriododicDataNLF.R")#
source("R_lib/multiplePlot.R")     #
#source("R_lib/dataShift.R")        #
#####################################
#call the built-in packages
require(data.table) #to callPer fread
require(ggplot2)
##############################################################################################################################
######## User Input Parameters ###############################################################################################
##############################################################################################################################
#1. How long the user wants to monitor the measurement
NoScreen=1
#2. The filename of the data, which is recorded and continues being updated by Labview
FILENAME <-"Sample_Data.txt"
#3. Depends on the measurement, the initial SAR may be undesired. By changing the SARstartTime,
#   the initial SAR can be elimiated from the plot
SARstartTime <-10
#4. Name for csv HT file
csvName<- paste0("HT_",substr(FILENAME,1,nchar(FILENAME)-4),".csv")
#5. Concentration for SAR
Concnetration <-8.68
##############################################################################################################################
##############################################################################################################################
##############################################################################################################################
for(i in 1:NoScreen) {
data1 <-  fread(FILENAME)   ##### Input Name of Data
startData <-1
EndData <- 1
TimeFactor <- 1
SampleName <- FILENAME
dataAll <- c("data1")
j <- startData
##################################################
##Use multipleHeatingCurve to withdraw t,T1 and f#
##################################################
TimeSampleIn <-F
PlotOn <-F
data<-multiplePlot(startData,EndData,
TimeFactor,SampleName,dataAll,
TimeSampleIn,PlotOn)
t<-data$t
#f<-data$f
T1<-data$T1
#H<-data$H
plot(t,T1)
Period = round(locator(2)$x) -1
data <- data[Period[1]:Period[2],]
t<-data$t -min(data$t)
f<-data$f
T1<-data$T1
T3<-data$T3
H<-data$H/1000
########################################
##Use calSAR to calculate SAR instantly#
########################################
Interval <- 10
Concentration <- Concnetration
specificC<-4.186 # 1.966 #181.2 J/mol K (J/gK)/92.15
startTime<-SARstartTime
plotOn<-T
saveOn<-T
ResultSAR <- calSAR(t,T1,H,f,T3,Interval,FILENAME, Concentration, specificC,startTime,plotOn,saveOn)
##########################################
#####Optimize the interval of calSAR######
##### WARNING: computationally heavy!!####
##########################################
OpzSAROn<-F  # type T to switch it on
rangeofInterval <-c(15,60)
if(OpzSAROn){OpzSAR <- function(Interval,opzSAR){
opzSAR <- calSAR(t,T1,H,f,Interval,Concentration,
specificC,startTime,plotOn)$sdSAR}
OpzInterval <- optimize(OpzSAR,rangeofInterval)$minimum
ResultSAR <- calSAR(t,T1,H,f,OpzInterval,Concentration,
specificC,startTime,plotOn)}
######################
#####Plot Figure######
######################
##Temperature and Frequency##
pdf(paste0("ILP_",substr(FILENAME,1,nchar(FILENAME)-4),".pdf"))
par(oma=c(0,0,2,0))
par(mfrow=c(2,2))
plot(t,T1,pch = 1,col = 1,
xlim=range(t),ylim = range(T1),
xlab = "Time (sec)",
ylab = "Temperature (Â°C)",
main = "Heating Curve")
grid()
abline(h =T1[1],  lty = 3,col=4)
abline(h =T1[length(T1)],  lty = 3,col=4)
mtext(substitute(paste(Delta,"T = ", m,"Â°C"),
list(m=T1[length(T1)]-T1[1])) ,side=4,col=1)
################Text in Plot####################
text(1.1*mean(t),min(T1)+0.2*(max(T1)-min(T1)),
paste("H = ",
round(mean(ResultSAR$Hi),digits =2),"kA/m","\n",
"f = ",
round(mean(ResultSAR$fi)/1000,digits = 2),"kHz","\n",
"Concentration = ",
round(Concentration,digits =2),"mg/ml"
))
################Text in Plot####################
plot(t,f,pch = 2,col =2,
xlim = range(t),ylim = range(f),
xlab = "Time (sec)",
ylab = "Frequency (Hz)",
main = "Frequency")
grid()
abline(h =f[1],  lty = 3,col=4)
abline(h =f[length(f)],  lty = 3,col=4)
mtext(substitute(paste(Delta,"f = ", m,"Hz"),
list(m=round(f[length(f)]-f[1],digits =2))) ,side=4,col=2)
################Text in Plot####################
text(1.1*mean(t),min(f)+0.2*(max(f)-min(f)),
paste("H = ",
round(mean(ResultSAR$Hi),digits =2),"kA/m","\n",
"f1 = ",
round(f[1],digits = 2),"Hz","\n",
"Concentration = ",
round(Concentration,digits =2),"mg/ml"
))
################Text in Plot####################
##SAR & ILP##
Time <- ResultSAR$Time
SAR <-ResultSAR$SAR
ILP <-ResultSAR$ILP
plot(Time,SAR, pch = 3,col = 3,
xlim=range(t),ylim = c(0.8*min(SAR),1.2*max(SAR)),
xlab = "Time (sec)",
ylab = "SAR (W/g)",
main = "SAR")
grid()
abline(h =mean(SAR), lty = 3)
################Text in Plot####################
text( mean(t),1.1*max(SAR),
substitute(atop(paste("SAR = ",meanSAR," Â± ",sdSAR," W/g","\n"),
atop(paste("ILP = ",meanILP," Â± ",sdILP," nHm"^"2","/kg"),
paste("L =",meanL," W/K.g" )
)),
list(meanILP =round(mean(ILP),digits=2),
sdILP =round(sd(ILP),digits=2),
meanSAR =round(mean(SAR),digits=2),
sdSAR =round(sd(SAR),digits=2),
meanL =round(mean(ResultSAR$L),digits=2)
)
)
)
################Text in Plot####################
plot(Time,ILP ,pch = 4,col = 4,
xlim=range(t),ylim = c(0.8*min(ILP),1.2*max(ILP)),
xlab = "Time (sec)",
ylab = expression(paste("ILP (nHm"^"2","/kg)")),
main = "ILP")
grid()
abline(h =mean(ILP), lty = 3)
################Text in Plot####################
text( mean(t),1.1*max(ILP),
substitute(atop(paste("ILP = ",meanILP," Â± ",sdILP," nHm"^"2","/kg"),
atop(paste("SAR = ",meanSAR," Â± ",sdSAR," W/g","\n"),
paste("L =",meanL," W/K.g" )
)),
list(meanILP =round(mean(ILP),digits=2),
sdILP =round(sd(ILP),digits=2),
meanSAR =round(mean(SAR),digits=2),
sdSAR =round(sd(SAR),digits=2),
meanL =round(mean(ResultSAR$L),digits=2)
)
)
)
################Text in Plot####################
title(main=substr(FILENAME,1,nchar(FILENAME)-4),outer=T)
dev.off()
##########################################
Sys.sleep(1)
print(i)
Out <- data.frame(t,T1)
write.table(Out,  csvName, row.names=F, na="NA",
append = F, quote= FALSE, sep = ",", col.names = T)
}
source("R_lib/multiplePlot.R")     #
#getwd()
rm(list=ls())
#use setwd() to direct the workspace to where the data is.
#setwd("C:/Users/Fangyu/Google Drive/3_UCL MRes Medical Device/M0_Individual Project/A008 Experiments/C004_LabViewPicoScope/x64/Fangyu Code/B002_BuiltInFrequencyDetection/Data")
##########################################
############### Call Function ############
##########################################
source("R_lib/TimeSampleInOut.R")
source("R_lib/calSAR.R")
source("R_lib/multiHeatingCurve.R")
#######Unused Functions##############
#source("R_lib/PeriododicDataNLF.R")#
source("R_lib/multiplePlot.R")     #
#source("R_lib/dataShift.R")        #
#####################################
#call the built-in packages
require(data.table) #to callPer fread
require(ggplot2)
##############################################################################################################################
######## User Input Parameters ###############################################################################################
##############################################################################################################################
#1. How long the user wants to monitor the measurement
NoScreen=1
#2. The filename of the data, which is recorded and continues being updated by Labview
FILENAME <-"Sample_Data.txt"
#3. Depends on the measurement, the initial SAR may be undesired. By changing the SARstartTime,
#   the initial SAR can be elimiated from the plot
SARstartTime <-10
#4. Name for csv HT file
csvName<- paste0("HT_",substr(FILENAME,1,nchar(FILENAME)-4),".csv")
#5. Concentration for SAR
Concnetration <-8.68
##############################################################################################################################
##############################################################################################################################
##############################################################################################################################
for(i in 1:NoScreen) {
data1 <-  fread(FILENAME)   ##### Input Name of Data
startData <-1
EndData <- 1
TimeFactor <- 1
SampleName <- FILENAME
dataAll <- c("data1")
j <- startData
##################################################
##Use multipleHeatingCurve to withdraw t,T1 and f#
##################################################
TimeSampleIn <-F
PlotOn <-F
data<-multiplePlot(startData,EndData,
TimeFactor,SampleName,dataAll,
TimeSampleIn,PlotOn)
t<-data$t
#f<-data$f
T1<-data$T1
#H<-data$H
plot(t,T1)
Period = round(locator(2)$x) -1
data <- data[Period[1]:Period[2],]
t<-data$t -min(data$t)
f<-data$f
T1<-data$T1
T3<-data$T3
H<-data$H/1000
########################################
##Use calSAR to calculate SAR instantly#
########################################
Interval <- 10
Concentration <- Concnetration
specificC<-4.186 # 1.966 #181.2 J/mol K (J/gK)/92.15
startTime<-SARstartTime
plotOn<-T
saveOn<-T
ResultSAR <- calSAR(t,T1,H,f,T3,Interval,FILENAME, Concentration, specificC,startTime,plotOn,saveOn)
##########################################
#####Optimize the interval of calSAR######
##### WARNING: computationally heavy!!####
##########################################
OpzSAROn<-F  # type T to switch it on
rangeofInterval <-c(15,60)
if(OpzSAROn){OpzSAR <- function(Interval,opzSAR){
opzSAR <- calSAR(t,T1,H,f,Interval,Concentration,
specificC,startTime,plotOn)$sdSAR}
OpzInterval <- optimize(OpzSAR,rangeofInterval)$minimum
ResultSAR <- calSAR(t,T1,H,f,OpzInterval,Concentration,
specificC,startTime,plotOn)}
######################
#####Plot Figure######
######################
##Temperature and Frequency##
pdf(paste0("ILP_",substr(FILENAME,1,nchar(FILENAME)-4),".pdf"))
par(oma=c(0,0,2,0))
par(mfrow=c(2,2))
plot(t,T1,pch = 1,col = 1,
xlim=range(t),ylim = range(T1),
xlab = "Time (sec)",
ylab = "Temperature (Â°C)",
main = "Heating Curve")
grid()
abline(h =T1[1],  lty = 3,col=4)
abline(h =T1[length(T1)],  lty = 3,col=4)
mtext(substitute(paste(Delta,"T = ", m,"Â°C"),
list(m=T1[length(T1)]-T1[1])) ,side=4,col=1)
################Text in Plot####################
text(1.1*mean(t),min(T1)+0.2*(max(T1)-min(T1)),
paste("H = ",
round(mean(ResultSAR$Hi),digits =2),"kA/m","\n",
"f = ",
round(mean(ResultSAR$fi)/1000,digits = 2),"kHz","\n",
"Concentration = ",
round(Concentration,digits =2),"mg/ml"
))
################Text in Plot####################
plot(t,f,pch = 2,col =2,
xlim = range(t),ylim = range(f),
xlab = "Time (sec)",
ylab = "Frequency (Hz)",
main = "Frequency")
grid()
abline(h =f[1],  lty = 3,col=4)
abline(h =f[length(f)],  lty = 3,col=4)
mtext(substitute(paste(Delta,"f = ", m,"Hz"),
list(m=round(f[length(f)]-f[1],digits =2))) ,side=4,col=2)
################Text in Plot####################
text(1.1*mean(t),min(f)+0.2*(max(f)-min(f)),
paste("H = ",
round(mean(ResultSAR$Hi),digits =2),"kA/m","\n",
"f1 = ",
round(f[1],digits = 2),"Hz","\n",
"Concentration = ",
round(Concentration,digits =2),"mg/ml"
))
################Text in Plot####################
##SAR & ILP##
Time <- ResultSAR$Time
SAR <-ResultSAR$SAR
ILP <-ResultSAR$ILP
plot(Time,SAR, pch = 3,col = 3,
xlim=range(t),ylim = c(0.8*min(SAR),1.2*max(SAR)),
xlab = "Time (sec)",
ylab = "SAR (W/g)",
main = "SAR")
grid()
abline(h =mean(SAR), lty = 3)
################Text in Plot####################
text( mean(t),1.1*max(SAR),
substitute(atop(paste("SAR = ",meanSAR," Â± ",sdSAR," W/g","\n"),
atop(paste("ILP = ",meanILP," Â± ",sdILP," nHm"^"2","/kg"),
paste("L =",meanL," W/K.g" )
)),
list(meanILP =round(mean(ILP),digits=2),
sdILP =round(sd(ILP),digits=2),
meanSAR =round(mean(SAR),digits=2),
sdSAR =round(sd(SAR),digits=2),
meanL =round(mean(ResultSAR$L),digits=2)
)
)
)
################Text in Plot####################
plot(Time,ILP ,pch = 4,col = 4,
xlim=range(t),ylim = c(0.8*min(ILP),1.2*max(ILP)),
xlab = "Time (sec)",
ylab = expression(paste("ILP (nHm"^"2","/kg)")),
main = "ILP")
grid()
abline(h =mean(ILP), lty = 3)
################Text in Plot####################
text( mean(t),1.1*max(ILP),
substitute(atop(paste("ILP = ",meanILP," Â± ",sdILP," nHm"^"2","/kg"),
atop(paste("SAR = ",meanSAR," Â± ",sdSAR," W/g","\n"),
paste("L =",meanL," W/K.g" )
)),
list(meanILP =round(mean(ILP),digits=2),
sdILP =round(sd(ILP),digits=2),
meanSAR =round(mean(SAR),digits=2),
sdSAR =round(sd(SAR),digits=2),
meanL =round(mean(ResultSAR$L),digits=2)
)
)
)
################Text in Plot####################
title(main=substr(FILENAME,1,nchar(FILENAME)-4),outer=T)
dev.off()
##########################################
Sys.sleep(1)
print(i)
Out <- data.frame(t,T1)
write.table(Out,  csvName, row.names=F, na="NA",
append = F, quote= FALSE, sep = ",", col.names = T)
}
